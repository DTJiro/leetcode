# 解法一: 连接法

核心在于把求累和(cumsum)的问题转化为求相同性别, 日期小于等于当前日期的记录的分数之和

join

* mysql

```mysql
SELECT s1.gender, s1.day, SUM(s2.score_points) AS total
FROM Scores AS s1 JOIN Scores AS s2
ON s1.gender = s2.gender AND s1.day >= s2.day
GROUP BY s1.gender, s1.day
ORDER BY s1.gender, s1.day;
```

where

* mysql

```mysql
SELECT s1.gender, s1.day, SUM(s2.score_points) AS total
FROM Scores AS s1, Scores AS s2
WHERE s1.gender = s2.gender AND s1.day >= s2.day
GROUP BY s1.gender, s1.day
ORDER BY s1.gender, s1.day;
```

# 解法二: 窗口函数

在窗口的每条记录动态应用聚合函数SUM，可以动态计算在指定的窗口内的累计分数。

* mysql

```mysql
SELECT gender, day, SUM(score_points) OVER (PARTITION BY gender ORDER BY day) AS total
FROM Scores;
```

或

* mysql

```mysql
SELECT gender, day, SUM(score_points) OVER w AS total
FROM Scores
WINDOW w AS (PARTITION BY gender ORDER BY day);
```

