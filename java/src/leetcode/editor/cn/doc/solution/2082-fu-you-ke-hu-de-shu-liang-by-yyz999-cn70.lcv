### 解题思路

1. `store['amount'] > 500`：将`store`表中`amount`列的每个元素与500进行比较，并返回一个布尔值的Series，指示哪些元素大于500。

2. `store[store['amount'] > 500]`：根据上一步的结果，从`store`表中选择所有满足条件的行，即订单金额大于500的订单所在的行。

3. `store[store['amount'] > 500]['customer_id']`：从上一步得到的结果中，仅选择`customer_id`列。这可以看作从满足条件的行中提取出`customer_id`列的子集。

4. `store[store['amount'] > 500]['customer_id'].nunique()`：对上一步得到的`customer_id`列进行计数，返回独特（不重复）的`customer_id`数量。

接下来，我们使用这个数量来创建一个新的DataFrame对象`result`，通过`pd.DataFrame({'rich_count': [rich_count]})`这行代码来实现。在这里，我们使用字典形式的输入数据，其中键是列名，值是一个列表，列表中包含了`rich_count`这个值。这样就创建了一个新的DataFrame对象，该对象只有一个列`rich_count`，并包含了计算得到的富有客户数量。

### 代码

* python

```python
import pandas as pd

def count_rich_customers(store: pd.DataFrame) -> pd.DataFrame:
    rich_count = store[store['amount'] > 500]['customer_id'].nunique()
    result = pd.DataFrame({'rich_count': [rich_count]})
    return result

```

