### 解题思路

有很多同学对官方题解不懂，让我来解释一下having里面的逻辑

首先，第一步，中位数是什么？

中位数 就是 一个数，大于这个数的数的个数等于小于这个数的数的个数。
比如： 1 2 3 4 5
大于 3 有 2 个， 小于 3 有 2 个， 所以 3 是中位数。

很多同学觉得 淦 废话。 但是就是这么简单的东西，就可按照这个逻辑写出having。

来，

其次， sum(case when t1.Salary = t2.Salary then 1 else 0 end) 是干啥的？
这个clause的作用 是 用来检查 这几个数是否有重复的，重复几个。也就是频率。
比如： 1 2 3 3 4 5
1 出现了 1 次 所以 clause 结果 是 1
而 3 出现 2 次 所以 clause 结果 是 2
以此类推。很多同学依然觉得 淦 废话 ...
但是这个的深层次作用 是为了避免1个很重要的问题的发生，同时 这个频率也是为了作为比较的基础。

再看，

abs(sum(sign(t1.Salary - t2.Salary))) 是干嘛用的？
这句 clause明显的体现了 中位数的定义。
比如 1 2 3 4 5
以 第一个数 1 为例
n1 n2 sign(n1-n2)
1  1   0
1  2   -1
1  3   -1
1  4   -1
1  5   -1
....
abs(sum(sign(n1-n2))) = 4 说明什么？
说明 1 的右边四个数
再来，
以 第二个数 2 为例
n1 n2 sign(n1-n2)
2  1   1
2  2   0
2  3   -1
2  4   -1
2  5   -1
....
abs(sum(sign(n1-n2))) = 2 说明什么？
说明 2 的有左边 1 个数 右边 3 个数
然后我们可以理解为 2 左边 1 个数 右边 1 个数 相互抵消
也就是1 + （-1） =0，  剩下来 右边多出来两个数 也是就是 4 5

最后再看 3 。---> 1 1 0 -1 -1 都抵消了，所以结果为0

这也就充分说明了 如果为奇数，这个abs(sum(sign(n1-n2))) = 0 的时候 是中位数。
同时，如果为偶数，这个abs(sum(sign(n1-n2))) 是1的时候 是中位数。

到这一步，你已经看懂一大半了， 坚持一下。

就是我们回到 case..when...这个clause，统计出来是频率
最差最差，每个数出现1次，那么奇数时，1是不是大于等于0的？ 结果显然
那么偶数时，1是不是大于0的？ 结果也很显然

那有同学又有疑问了case...when...写的意义是什么？
直接1>=abs(sum(sign(n1-n2)))不就好了。

这就是我说的深层次的问题。
当两个数一样的时候，
比如 1 2 2 3 4
我们回到abs(sum(sign(n1-n2)))
已第3个数 2 为例 可以看到结果是 1 0 0 -1 -1 ---> abs结果是 1
那么 我们在这儿就不能简单的说，相互抵消右边多出来一个数，
而是，要加一个前置句。
也就是这个数，相互抵消后，**大于或者小于**有1个数。

以上，这就是having里面的逻辑了。
也就是

中位数出现的个数 一定 大于等于 一个数抵消两边后，多出来数的个数。
这不就是中位数的定义吗？？同学们！
**中位数 就是 一个数，大于这个数的数的个数等于小于这个数的数的个数。**
----------->
左右抵消后，没有了（奇数情况），或者多1个数（偶数情况），不就是体现吗。

最后最后，强烈建议自己画个表，能更加深理解！

### 代码

* mysql

```mysql
select t1.Id, t1.Company, t1.Salary
from Employee t1 LEFT JOIN Employee t2
ON t1.Company = t2.Company
group by t1.Company,t1.Salary
having sum(case 
	when t1.Salary = t2.Salary then 1
	else 0
end) >= abs(sum(sign(t1.Salary - t2.Salary)))
order by t1.Id;
```

