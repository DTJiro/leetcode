这题和“1454.活跃用户”类似，不过这题更简单一些。
用RANK() 或 ROW_NUMBER 都行，sql如下：

* mysql

```mysql
SELECT
    MIN(log_id) START_ID,
    MAX(log_id) END_ID
FROM
    (
    SELECT DISTINCT 
        log_id, 
        log_id - ROW_NUMBER() OVER ( ORDER BY log_id ASC ) reference
    FROM 
        Logs
    ) T
GROUP BY
    reference
ORDER BY
    START_ID
```

如果一下子看不懂，
请先看第一步：

* mysql

```mysql
SELECT DISTINCT 
    log_id, 
    ROW_NUMBER() OVER ( ORDER BY log_id ASC ) rn,
    log_id - ROW_NUMBER() OVER ( ORDER BY log_id ASC ) reference
FROM 
    Logs 
```

这一步对应结果如下：

* json

```json
["log_id", "rn", "reference"], 
[1, 1, 0], 
[2, 2, 0], 
[3, 3, 0], 
[7, 4, 3], 
[8, 5, 3], 
[10, 6, 4]
```

可见reference相同的log_id都是连续的，加上rn字段是为了便于理解，实际不需要。
所以下一步按reference求最大和最小log_id就好了。
