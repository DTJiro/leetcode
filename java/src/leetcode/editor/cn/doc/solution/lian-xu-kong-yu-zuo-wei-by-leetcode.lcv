#### 方法：使用自连接 `join` 和 `abs()` [Accepted]

**想法**

这个问题中只有一张表，所以我们需要使用自连接 **self join** 来解决这个相对复杂的问题。

**算法**

首先，我们看看将这个表自连接后得到什么结果。

> 注意：将两个表连接的结果是这两个表的 [笛卡尔乘积](https://baike.baidu.com/item/笛卡尔乘积/6323173?fr=aladdin) 。

* []

```sql
select a.seat_id, a.free, b.seat_id, b.free
from cinema a join cinema b;
```

| seat_id | free | seat_id | free |
|---------|------|---------|------|
| 1       | 1    | 1       | 1    |
| 2       | 0    | 1       | 1    |
| 3       | 1    | 1       | 1    |
| 4       | 1    | 1       | 1    |
| 5       | 1    | 1       | 1    |
| 1       | 1    | 2       | 0    |
| 2       | 0    | 2       | 0    |
| 3       | 1    | 2       | 0    |
| 4       | 1    | 2       | 0    |
| 5       | 1    | 2       | 0    |
| 1       | 1    | 3       | 1    |
| 2       | 0    | 3       | 1    |
| 3       | 1    | 3       | 1    |
| 4       | 1    | 3       | 1    |
| 5       | 1    | 3       | 1    |
| 1       | 1    | 4       | 1    |
| 2       | 0    | 4       | 1    |
| 3       | 1    | 4       | 1    |
| 4       | 1    | 4       | 1    |
| 5       | 1    | 4       | 1    |
| 1       | 1    | 5       | 1    |
| 2       | 0    | 5       | 1    |
| 3       | 1    | 5       | 1    |
| 4       | 1    | 5       | 1    |
| 5       | 1    | 5       | 1    |

为了找到连续空座位，`a.seat_id` 里面的值应该大于 `b.seat_id` 且两者都应该为空。

* []

```sql
select a.seat_id, a.free, b.seat_id, b.free
from cinema a join cinema b
  on abs(a.seat_id - b.seat_id) = 1
  and a.free = true and b.free = true;
```

| seat_id | free | seat_id | free |
|---------|------|---------|------|
| 4       | 1    | 3       | 1    |
| 3       | 1    | 4       | 1    |
| 5       | 1    | 4       | 1    |
| 4       | 1    | 5       | 1    |

最后，选择上表中的字段 seat_id ，并排序后返回。

> 注意：你可能发现 `seat_id` `4` 在表中出现了两次。这是因为座位 `4` 与 `3` 和 `5` 都相邻。所以我们需要使用 `distinct` 将重复记录筛除。

* []

```sql
select distinct a.seat_id
from cinema a join cinema b
  on abs(a.seat_id - b.seat_id) = 1
  and a.free = true and b.free = true
order by a.seat_id
;
```

