**解题思路**
1. 在原表格的基础上创建一个有行数的表格。
2. 使用Left join 自链接，s2的行数小于等于s1的行数，同时s2.drink不是NULL。即链接相同行数或前行数，不是null值的行。
3. RANK() 进行排序，最接近s1行数的排第一，以此类推。因为使用了RANK()，所以原来表格的顺序会被打乱。需要使用ORDER BY s1.idx把顺序调整回来。
4. 最后从这个表格中，返回当排序为1的id和drink。

**代码**

* 

```
WITH Shop AS(
    SELECT *, ROW_NUMBER() OVER () AS idx
    FROM CoffeeShop )

SELECT id, drink 
FROM
    (SELECT s1.id AS id, s2.drink AS drink, RANK() OVER (PARTITION BY s1.id ORDER BY s2.idx DESC) AS rk
        FROM Shop s1
        LEFT JOIN Shop s2
        ON s1.idx >= s2.idx AND s2.drink IS NOT NULL
        ORDER BY s1.idx) tmp
WHERE rk = 1
```

