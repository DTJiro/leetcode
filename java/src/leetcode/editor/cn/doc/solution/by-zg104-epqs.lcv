* 

```
【鲸析】SQL面经大全
https://docs.qq.com/doc/DRU5Pa0pManNvSXJH
```

##### 1. 思路

表很多比较复杂，首先想到cte拆分简化。分为两部分：
1. 计算2020年每个月累积的`active_drivers`（稍微难点）
2. 计算2020年每个月接受的乘车次数（简单）

那么先来看`active_drivers`：

`active_drivers`可以从Drivers表计算，难点在于

1. 累积的计算逻辑
   ![image.png](https://pic.leetcode-cn.com/1656504876-YvVBIM-image.png)
2. 生成连续数字的方法（MySQL 8.0 With递归方法）

* sql

```sql
with recursive table_name(n) AS  -- n代表该列的列名
(
select 1
union ALL
select n + 1
from c
where n < 100                    -- 生成1-100的连续数字
)
select * from table_name;   
```

3. 多表连接以及null的处理

##### 2. 答案

* sql

```sql

-- 生成1-12的连续月份，叫做12_month
with recursive 12_month(m) AS
(
select 1
union ALL
select m + 1
from 12_month
where m < 12
),

-- 通过Drivers表计算每个月对应的driver个数
-- 这里没计算累积
active_drivers_table as
(
    select 
        month(join_date) as m,
        count(1) as cnt
    from
    (
    select
        driver_id,
        case 
            when year(join_date)<2020 then '2020-1-1'
        else join_date end as join_date 
    from Drivers) tmp
    where join_date like '2020%'
    group by 1
),

-- 通过Rides和AcceptedRides表计算每个月接受的乘车次数
-- 这里不涉及累积，所以不需要考虑2020以外的任何情况！
accepted_rides_table as 
(
    select 
        month(requested_at) as m, 
        ifnull(count(*),0) as accepted_rides
    from AcceptedRides a 
    left join Rides b 
    using(ride_id)
    where requested_at like '2020%'
    group by 1
)

-- 最后，把三个表left join（注意null）
-- active_drivers使用窗口函数累加
-- ifnull填充
select
    m as month,
    sum(ifnull(cnt,0)) over(order by m) as active_drivers,
    ifnull(accepted_rides,0) as accepted_rides 
from 12_month t1
left join active_drivers_table t2 
using(m)
left join accepted_rides_table t3
using(m)
```

- 小红书：鲸鲸说数据
- 公众号：鲸析

