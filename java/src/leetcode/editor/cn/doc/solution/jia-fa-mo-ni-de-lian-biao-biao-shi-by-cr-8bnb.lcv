> Problem: [2. 两数相加](https://leetcode.cn/problems/add-two-numbers/description/)

[TOC]

# 思路

**>加法模拟：**

> 倒着的加法竖式。
> 每一位/下标的计算都以上一次的进位为初始值。
> 注意最后进位处理。

**>转换为链表表示：**

> 同样使用dummy节点，结果返回其下一个节点；用current作为游标移动。

# Code

* []

```Java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode result = new ListNode();
        ListNode current = result;
        while (l1 != null || l2 != null) {
            int sum = carry;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            carry = sum / 10;
            current.next = new ListNode(sum % 10);
            current = current.next;
        }
        if (carry > 0) {
            current.next = new ListNode(carry);
        }
        return result.next;

    }
}
```

