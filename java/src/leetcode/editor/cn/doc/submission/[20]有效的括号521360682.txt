class Solution {
    public boolean isValid(String s) {

		// if (s.length() % 2 == 1) {
		// 	return false;
		// }
		// Deque<Character> stack = new LinkedList<>();
		// for (char c : s.toCharArray()) {
		// 	if (c == '(') {
		// 		stack.push(')');
		// 	} else if (c == '{') {
		// 		stack.push('}');
		// 	} else if (c == '[') {
		// 		stack.push(']');
		// 	} else {
		// 		if (stack.isEmpty() || c != stack.pop()) {
		// 			return false;
		// 		}
		// 	}
		// }
		// return stack.isEmpty();

		Map<Character, Character> map = new HashMap<>(3){
			{
				put(')', '(');
				put('}', '{');
				put(']', '[');
			}
		};
		Deque<Character> stack = new LinkedList<>();
		for (char c : s.toCharArray()) {
			if (map.containsKey(c)) {
				if (stack.isEmpty() || !map.get(c).equals(stack.pop())) {
					return false;
				}
			} else {
				stack.push(c);
			}
		}
		return stack.isEmpty();
	}
}

//runtime:2 ms
//memory:40.8 MB
