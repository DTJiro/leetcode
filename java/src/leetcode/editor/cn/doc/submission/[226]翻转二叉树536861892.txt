/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
		if (root == null) {
			return null;
		}
		Queue<TreeNode> queue = new LinkedList<>();
		queue.offer(root);

		TreeNode p;
		TreeNode tmp;
		while (!queue.isEmpty()) {
			p = queue.poll();
			tmp = p.left;
			p.left = p.right;
			p.right = tmp;
			if (p.left != null) {
				queue.offer(p.left);
			}
			if (p.right != null) {
				queue.offer(p.right);
			}
		}
		return root;
    }
}

//runtime:0 ms
//memory:40 MB
