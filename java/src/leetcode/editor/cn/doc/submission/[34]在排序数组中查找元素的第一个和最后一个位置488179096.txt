class Solution {
    public int[] searchRange(int[] nums, int target) {
		int i = 0;
		int j = nums.length;
		int m = 0;
		int start = -1;
		int end = -1;
		while (i < j) {
			m = i + (j - i) / 2;
			if (target <= nums[m]) {
				j = m;
			} else {
				i = m + 1;
			}
		}
		start = i < 0 || i >= nums.length || target != nums[i] ? -1 : i;
		i = 0;
		j = nums.length;
		while (i < j) {
			m = i + (j - i) / 2;
			if (nums[m] <= target) {
				i = m + 1;
			} else {
				j = m;
			}
		}
		end = i - 1 >= 0 && i <= nums.length && nums[i - 1] == target ? i - 1 : -1;
		return new int[]{start, end};
    }
}

//runtime:0 ms
//memory:43.8 MB
