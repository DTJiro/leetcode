/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if (lists.length == 0) {
            return null;
        }

        return t1(lists, 0, lists.length - 1);
    }

    public ListNode t1(ListNode[] list, int i, int j) {
        if (i == j) {
            return list[i];
        }
        int m = (i + j) >>> 1;

        return dg(t1(list, i, m), t1(list, m + 1, j));
    }

	public ListNode dg(ListNode list1,ListNode list2) {
		if (list1 == null) {
			return list2;
		}
		if (list2 == null) {
			return list1;
		}
		if (list1.val <= list2.val) {
			list1.next = dg(list1.next, list2);
			return list1;
		} else {
			list2.next = dg(list1, list2.next);
			return list2;
		}
	}
}

//runtime:2 ms
//memory:43.4 MB
